{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/deep-equal/index.js","node_modules/deep-equal/lib/is_arguments.js","node_modules/deep-equal/lib/keys.js","node_modules/history/lib/Actions.js","node_modules/history/lib/AsyncUtils.js","node_modules/history/lib/DOMStateStorage.js","node_modules/history/lib/DOMUtils.js","node_modules/history/lib/ExecutionEnvironment.js","node_modules/history/lib/createBrowserHistory.js","node_modules/history/lib/createDOMHistory.js","node_modules/history/lib/createHistory.js","node_modules/history/lib/createLocation.js","node_modules/history/lib/deprecate.js","node_modules/history/lib/extractPath.js","node_modules/history/lib/parsePath.js","node_modules/history/lib/runTransitionHook.js","node_modules/invariant/browser.js","node_modules/process/browser.js","node_modules/warning/browser.js","source/client/components/App.js","source/client/components/Footer.js","source/client/components/Home.js","source/client/components/MovieAdd.js","source/client/components/Navbar.js","source/client/components/sub-components/MovieCard.js","source/client/main.js","source/client/routes.js","source/client/utilities/Helpers.js"],"names":[],"mappingspBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnjLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvlSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnxLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC5DA;;;;AAEA;;;;AACA;;;;;;;;;;;;IAEqB,G;;;;;;;;;;;6BACT;AACR,aACE;AAAA;AAAA;AACE,0DAAQ,SAAS,KAAK,KAAL,CAAW,OAA5B,GADF;AAEG,aAAK,KAAL,CAAW,QAFd;AAGE;AAHF,OA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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var pSlice = Array.prototype.slice;\r\nvar objectKeys = require('./lib/keys.js');\r\nvar isArguments = require('./lib/is_arguments.js');\r\n\r\nvar deepEqual = module.exports = function (actual, expected, opts) {\r\n  if (!opts) opts = {};\r\n  // 7.1. All identical values are equivalent, as determined by ===.\r\n  if (actual === expected) {\r\n    return true;\r\n\r\n  } else if (actual instanceof Date && expected instanceof Date) {\r\n    return actual.getTime() === expected.getTime();\r\n\r\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\r\n  // equivalence is determined by ==.\r\n  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\r\n    return opts.strict ? actual === expected : actual == expected;\r\n\r\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\r\n  // determined by having the same number of owned properties (as verified\r\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\r\n  // (although not necessarily the same order), equivalent values for every\r\n  // corresponding key, and an identical 'prototype' property. Note: this\r\n  // accounts for both named and indexed properties on Arrays.\r\n  } else {\r\n    return objEquiv(actual, expected, opts);\r\n  }\r\n}\r\n\r\nfunction isUndefinedOrNull(value) {\r\n  return value === null || value === undefined;\r\n}\r\n\r\nfunction isBuffer (x) {\r\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\r\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\r\n    return false;\r\n  }\r\n  if (x.length > 0 && typeof x[0] !== 'number') return false;\r\n  return true;\r\n}\r\n\r\nfunction objEquiv(a, b, opts) {\r\n  var i, key;\r\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\r\n    return false;\r\n  // an identical 'prototype' property.\r\n  if (a.prototype !== b.prototype) return false;\r\n  //~~~I've managed to break Object.keys through screwy arguments passing.\r\n  //   Converting to array solves the problem.\r\n  if (isArguments(a)) {\r\n    if (!isArguments(b)) {\r\n      return false;\r\n    }\r\n    a = pSlice.call(a);\r\n    b = pSlice.call(b);\r\n    return deepEqual(a, b, opts);\r\n  }\r\n  if (isBuffer(a)) {\r\n    if (!isBuffer(b)) {\r\n      return false;\r\n    }\r\n    if (a.length !== b.length) return false;\r\n    for (i = 0; i < a.length; i++) {\r\n      if (a[i] !== b[i]) return false;\r\n    }\r\n    return true;\r\n  }\r\n  try {\r\n    var ka = objectKeys(a),\r\n        kb = objectKeys(b);\r\n  } catch (e) {//happens when one is a string literal and the other isn't\r\n    return false;\r\n  }\r\n  // having the same number of owned properties (keys incorporates\r\n  // hasOwnProperty)\r\n  if (ka.length != kb.length)\r\n    return false;\r\n  //the same set of keys (although not necessarily the same order),\r\n  ka.sort();\r\n  kb.sort();\r\n  //~~~cheap key test\r\n  for (i = ka.length - 1; i >= 0; i--) {\r\n    if (ka[i] != kb[i])\r\n      return false;\r\n  }\r\n  //equivalent values for every corresponding key, and\r\n  //~~~possibly expensive deep test\r\n  for (i = ka.length - 1; i >= 0; i--) {\r\n    key = ka[i];\r\n    if (!deepEqual(a[key], b[key], opts)) return false;\r\n  }\r\n  return typeof a === typeof b;\r\n}\r\n","var supportsArgumentsClass = (function(){\r\n  return Object.prototype.toString.call(arguments)\r\n})() == '[object Arguments]';\r\n\r\nexports = module.exports = supportsArgumentsClass ? supported : unsupported;\r\n\r\nexports.supported = supported;\r\nfunction supported(object) {\r\n  return Object.prototype.toString.call(object) == '[object Arguments]';\r\n};\r\n\r\nexports.unsupported = unsupported;\r\nfunction unsupported(object){\r\n  return object &&\r\n    typeof object == 'object' &&\r\n    typeof object.length == 'number' &&\r\n    Object.prototype.hasOwnProperty.call(object, 'callee') &&\r\n    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||\r\n    false;\r\n};\r\n","exports = module.exports = typeof Object.keys === 'function'\r\n  ? Object.keys : shim;\r\n\r\nexports.shim = shim;\r\nfunction shim (obj) {\r\n  var keys = [];\r\n  for (var key in obj) keys.push(key);\r\n  return keys;\r\n}\r\n","/**\r\n * Indicates that navigation was caused by a call to history.push.\r\n */\r\n'use strict';\r\n\r\nexports.__esModule = true;\r\nvar PUSH = 'PUSH';\r\n\r\nexports.PUSH = PUSH;\r\n/**\r\n * Indicates that navigation was caused by a call to history.replace.\r\n */\r\nvar REPLACE = 'REPLACE';\r\n\r\nexports.REPLACE = REPLACE;\r\n/**\r\n * Indicates that navigation was caused by some other action such\r\n * as using a browser's back/forward buttons and/or manually manipulating\r\n * the URL in a browser's location bar. This is the default.\r\n *\r\n * See https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onpopstate\r\n * for more information.\r\n */\r\nvar POP = 'POP';\r\n\r\nexports.POP = POP;\r\nexports['default'] = {\r\n  PUSH: PUSH,\r\n  REPLACE: REPLACE,\r\n  POP: POP\r\n};","\"use strict\";\r\n\r\nexports.__esModule = true;\r\nexports.loopAsync = loopAsync;\r\n\r\nfunction loopAsync(turns, work, callback) {\r\n  var currentTurn = 0;\r\n  var isDone = false;\r\n\r\n  function done() {\r\n    isDone = true;\r\n    callback.apply(this, arguments);\r\n  }\r\n\r\n  function next() {\r\n    if (isDone) return;\r\n\r\n    if (currentTurn < turns) {\r\n      work.call(this, currentTurn++, next, done);\r\n    } else {\r\n      done.apply(this, arguments);\r\n    }\r\n  }\r\n\r\n  next();\r\n}","/*eslint-disable no-empty */\r\n'use strict';\r\n\r\nexports.__esModule = true;\r\nexports.saveState = saveState;\r\nexports.readState = readState;\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\r\n\r\nvar _warning = require('warning');\r\n\r\nvar _warning2 = _interopRequireDefault(_warning);\r\n\r\nvar KeyPrefix = '@@History/';\r\nvar QuotaExceededError = 'QuotaExceededError';\r\nvar SecurityError = 'SecurityError';\r\n\r\nfunction createKey(key) {\r\n  return KeyPrefix + key;\r\n}\r\n\r\nfunction saveState(key, state) {\r\n  try {\r\n    window.sessionStorage.setItem(createKey(key), JSON.stringify(state));\r\n  } catch (error) {\r\n    if (error.name === SecurityError) {\r\n      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any\r\n      // attempt to access window.sessionStorage.\r\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available due to security settings') : undefined;\r\n\r\n      return;\r\n    }\r\n\r\n    if (error.name === QuotaExceededError && window.sessionStorage.length === 0) {\r\n      // Safari \"private mode\" throws QuotaExceededError.\r\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available in Safari private mode') : undefined;\r\n\r\n      return;\r\n    }\r\n\r\n    throw error;\r\n  }\r\n}\r\n\r\nfunction readState(key) {\r\n  var json = undefined;\r\n  try {\r\n    json = window.sessionStorage.getItem(createKey(key));\r\n  } catch (error) {\r\n    if (error.name === SecurityError) {\r\n      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any\r\n      // attempt to access window.sessionStorage.\r\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to read state; sessionStorage is not available due to security settings') : undefined;\r\n\r\n      return null;\r\n    }\r\n  }\r\n\r\n  if (json) {\r\n    try {\r\n      return JSON.parse(json);\r\n    } catch (error) {\r\n      // Ignore invalid JSON.\r\n    }\r\n  }\r\n\r\n  return null;\r\n}","'use strict';\r\n\r\nexports.__esModule = true;\r\nexports.addEventListener = addEventListener;\r\nexports.removeEventListener = removeEventListener;\r\nexports.getHashPath = getHashPath;\r\nexports.replaceHashPath = replaceHashPath;\r\nexports.getWindowPath = getWindowPath;\r\nexports.go = go;\r\nexports.getUserConfirmation = getUserConfirmation;\r\nexports.supportsHistory = supportsHistory;\r\nexports.supportsGoWithoutReloadUsingHash = supportsGoWithoutReloadUsingHash;\r\n\r\nfunction addEventListener(node, event, listener) {\r\n  if (node.addEventListener) {\r\n    node.addEventListener(event, listener, false);\r\n  } else {\r\n    node.attachEvent('on' + event, listener);\r\n  }\r\n}\r\n\r\nfunction removeEventListener(node, event, listener) {\r\n  if (node.removeEventListener) {\r\n    node.removeEventListener(event, listener, false);\r\n  } else {\r\n    node.detachEvent('on' + event, listener);\r\n  }\r\n}\r\n\r\nfunction getHashPath() {\r\n  // We can't use window.location.hash here because it's not\r\n  // consistent across browsers - Firefox will pre-decode it!\r\n  return window.location.href.split('#')[1] || '';\r\n}\r\n\r\nfunction replaceHashPath(path) {\r\n  window.location.replace(window.location.pathname + window.location.search + '#' + path);\r\n}\r\n\r\nfunction getWindowPath() {\r\n  return window.location.pathname + window.location.search + window.location.hash;\r\n}\r\n\r\nfunction go(n) {\r\n  if (n) window.history.go(n);\r\n}\r\n\r\nfunction getUserConfirmation(message, callback) {\r\n  callback(window.confirm(message));\r\n}\r\n\r\n/**\r\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\r\n *\r\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\r\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\r\n * changed to avoid false negatives for Windows Phones: https://github.com/rackt/react-router/issues/586\r\n */\r\n\r\nfunction supportsHistory() {\r\n  var ua = navigator.userAgent;\r\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) {\r\n    return false;\r\n  }\r\n  // FIXME: Work around our browser history not working correctly on Chrome\r\n  // iOS: https://github.com/rackt/react-router/issues/2565\r\n  if (ua.indexOf('CriOS') !== -1) {\r\n    return false;\r\n  }\r\n  return window.history && 'pushState' in window.history;\r\n}\r\n\r\n/**\r\n * Returns false if using go(n) with hash history causes a full page reload.\r\n */\r\n\r\nfunction supportsGoWithoutReloadUsingHash() {\r\n  var ua = navigator.userAgent;\r\n  return ua.indexOf('Firefox') === -1;\r\n}","'use strict';\r\n\r\nexports.__esModule = true;\r\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\r\nexports.canUseDOM = canUseDOM;","'use strict';\r\n\r\nexports.__esModule = true;\r\n\r\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\r\n\r\nvar _invariant = require('invariant');\r\n\r\nvar _invariant2 = _interopRequireDefault(_invariant);\r\n\r\nvar _Actions = require('./Actions');\r\n\r\nvar _ExecutionEnvironment = require('./ExecutionEnvironment');\r\n\r\nvar _DOMUtils = require('./DOMUtils');\r\n\r\nvar _DOMStateStorage = require('./DOMStateStorage');\r\n\r\nvar _createDOMHistory = require('./createDOMHistory');\r\n\r\nvar _createDOMHistory2 = _interopRequireDefault(_createDOMHistory);\r\n\r\nvar _parsePath = require('./parsePath');\r\n\r\nvar _parsePath2 = _interopRequireDefault(_parsePath);\r\n\r\n/**\r\n * Creates and returns a history object that uses HTML5's history API\r\n * (pushState, replaceState, and the popstate event) to manage history.\r\n * This is the recommended method of managing history in browsers because\r\n * it provides the cleanest URLs.\r\n *\r\n * Note: In browsers that do not support the HTML5 history API full\r\n * page reloads will be used to preserve URLs.\r\n */\r\nfunction createBrowserHistory() {\r\n  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\r\n\r\n  !_ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'Browser history needs a DOM') : _invariant2['default'](false) : undefined;\r\n\r\n  var forceRefresh = options.forceRefresh;\r\n\r\n  var isSupported = _DOMUtils.supportsHistory();\r\n  var useRefresh = !isSupported || forceRefresh;\r\n\r\n  function getCurrentLocation(historyState) {\r\n    historyState = historyState || window.history.state || {};\r\n\r\n    var path = _DOMUtils.getWindowPath();\r\n    var _historyState = historyState;\r\n    var key = _historyState.key;\r\n\r\n    var state = undefined;\r\n    if (key) {\r\n      state = _DOMStateStorage.readState(key);\r\n    } else {\r\n      state = null;\r\n      key = history.createKey();\r\n\r\n      if (isSupported) window.history.replaceState(_extends({}, historyState, { key: key }), null, path);\r\n    }\r\n\r\n    var location = _parsePath2['default'](path);\r\n\r\n    return history.createLocation(_extends({}, location, { state: state }), undefined, key);\r\n  }\r\n\r\n  function startPopStateListener(_ref) {\r\n    var transitionTo = _ref.transitionTo;\r\n\r\n    function popStateListener(event) {\r\n      if (event.state === undefined) return; // Ignore extraneous popstate events in WebKit.\r\n\r\n      transitionTo(getCurrentLocation(event.state));\r\n    }\r\n\r\n    _DOMUtils.addEventListener(window, 'popstate', popStateListener);\r\n\r\n    return function () {\r\n      _DOMUtils.removeEventListener(window, 'popstate', popStateListener);\r\n    };\r\n  }\r\n\r\n  function finishTransition(location) {\r\n    var basename = location.basename;\r\n    var pathname = location.pathname;\r\n    var search = location.search;\r\n    var hash = location.hash;\r\n    var state = location.state;\r\n    var action = location.action;\r\n    var key = location.key;\r\n\r\n    if (action === _Actions.POP) return; // Nothing to do.\r\n\r\n    _DOMStateStorage.saveState(key, state);\r\n\r\n    var path = (basename || '') + pathname + search + hash;\r\n    var historyState = {\r\n      key: key\r\n    };\r\n\r\n    if (action === _Actions.PUSH) {\r\n      if (useRefresh) {\r\n        window.location.href = path;\r\n        return false; // Prevent location update.\r\n      } else {\r\n          window.history.pushState(historyState, null, path);\r\n        }\r\n    } else {\r\n      // REPLACE\r\n      if (useRefresh) {\r\n        window.location.replace(path);\r\n        return false; // Prevent location update.\r\n      } else {\r\n          window.history.replaceState(historyState, null, path);\r\n        }\r\n    }\r\n  }\r\n\r\n  var history = _createDOMHistory2['default'](_extends({}, options, {\r\n    getCurrentLocation: getCurrentLocation,\r\n    finishTransition: finishTransition,\r\n    saveState: _DOMStateStorage.saveState\r\n  }));\r\n\r\n  var listenerCount = 0,\r\n      stopPopStateListener = undefined;\r\n\r\n  function listenBefore(listener) {\r\n    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);\r\n\r\n    var unlisten = history.listenBefore(listener);\r\n\r\n    return function () {\r\n      unlisten();\r\n\r\n      if (--listenerCount === 0) stopPopStateListener();\r\n    };\r\n  }\r\n\r\n  function listen(listener) {\r\n    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);\r\n\r\n    var unlisten = history.listen(listener);\r\n\r\n    return function () {\r\n      unlisten();\r\n\r\n      if (--listenerCount === 0) stopPopStateListener();\r\n    };\r\n  }\r\n\r\n  // deprecated\r\n  function registerTransitionHook(hook) {\r\n    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);\r\n\r\n    history.registerTransitionHook(hook);\r\n  }\r\n\r\n  // deprecated\r\n  function unregisterTransitionHook(hook) {\r\n    history.unregisterTransitionHook(hook);\r\n\r\n    if (--listenerCount === 0) stopPopStateListener();\r\n  }\r\n\r\n  return _extends({}, history, {\r\n    listenBefore: listenBefore,\r\n    listen: listen,\r\n    registerTransitionHook: registerTransitionHook,\r\n    unregisterTransitionHook: unregisterTransitionHook\r\n  });\r\n}\r\n\r\nexports['default'] = createBrowserHistory;\r\nmodule.exports = exports['default'];","'use strict';\r\n\r\nexports.__esModule = true;\r\n\r\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\r\n\r\nvar _invariant = require('invariant');\r\n\r\nvar _invariant2 = _interopRequireDefault(_invariant);\r\n\r\nvar _ExecutionEnvironment = require('./ExecutionEnvironment');\r\n\r\nvar _DOMUtils = require('./DOMUtils');\r\n\r\nvar _createHistory = require('./createHistory');\r\n\r\nvar _createHistory2 = _interopRequireDefault(_createHistory);\r\n\r\nfunction createDOMHistory(options) {\r\n  var history = _createHistory2['default'](_extends({\r\n    getUserConfirmation: _DOMUtils.getUserConfirmation\r\n  }, options, {\r\n    go: _DOMUtils.go\r\n  }));\r\n\r\n  function listen(listener) {\r\n    !_ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'DOM history needs a DOM') : _invariant2['default'](false) : undefined;\r\n\r\n    return history.listen(listener);\r\n  }\r\n\r\n  return _extends({}, history, {\r\n    listen: listen\r\n  });\r\n}\r\n\r\nexports['default'] = createDOMHistory;\r\nmodule.exports = exports['default'];","//import warning from 'warning'\r\n'use strict';\r\n\r\nexports.__esModule = true;\r\n\r\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\r\n\r\nvar _deepEqual = require('deep-equal');\r\n\r\nvar _deepEqual2 = _interopRequireDefault(_deepEqual);\r\n\r\nvar _AsyncUtils = require('./AsyncUtils');\r\n\r\nvar _Actions = require('./Actions');\r\n\r\nvar _createLocation2 = require('./createLocation');\r\n\r\nvar _createLocation3 = _interopRequireDefault(_createLocation2);\r\n\r\nvar _runTransitionHook = require('./runTransitionHook');\r\n\r\nvar _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);\r\n\r\nvar _parsePath = require('./parsePath');\r\n\r\nvar _parsePath2 = _interopRequireDefault(_parsePath);\r\n\r\nvar _deprecate = require('./deprecate');\r\n\r\nvar _deprecate2 = _interopRequireDefault(_deprecate);\r\n\r\nfunction createRandomKey(length) {\r\n  return Math.random().toString(36).substr(2, length);\r\n}\r\n\r\nfunction locationsAreEqual(a, b) {\r\n  return a.pathname === b.pathname && a.search === b.search &&\r\n  //a.action === b.action && // Different action !== location change.\r\n  a.key === b.key && _deepEqual2['default'](a.state, b.state);\r\n}\r\n\r\nvar DefaultKeyLength = 6;\r\n\r\nfunction createHistory() {\r\n  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\r\n  var getCurrentLocation = options.getCurrentLocation;\r\n  var finishTransition = options.finishTransition;\r\n  var saveState = options.saveState;\r\n  var go = options.go;\r\n  var keyLength = options.keyLength;\r\n  var getUserConfirmation = options.getUserConfirmation;\r\n\r\n  if (typeof keyLength !== 'number') keyLength = DefaultKeyLength;\r\n\r\n  var transitionHooks = [];\r\n\r\n  function listenBefore(hook) {\r\n    transitionHooks.push(hook);\r\n\r\n    return function () {\r\n      transitionHooks = transitionHooks.filter(function (item) {\r\n        return item !== hook;\r\n      });\r\n    };\r\n  }\r\n\r\n  var allKeys = [];\r\n  var changeListeners = [];\r\n  var location = undefined;\r\n\r\n  function getCurrent() {\r\n    if (pendingLocation && pendingLocation.action === _Actions.POP) {\r\n      return allKeys.indexOf(pendingLocation.key);\r\n    } else if (location) {\r\n      return allKeys.indexOf(location.key);\r\n    } else {\r\n      return -1;\r\n    }\r\n  }\r\n\r\n  function updateLocation(newLocation) {\r\n    var current = getCurrent();\r\n\r\n    location = newLocation;\r\n\r\n    if (location.action === _Actions.PUSH) {\r\n      allKeys = [].concat(allKeys.slice(0, current + 1), [location.key]);\r\n    } else if (location.action === _Actions.REPLACE) {\r\n      allKeys[current] = location.key;\r\n    }\r\n\r\n    changeListeners.forEach(function (listener) {\r\n      listener(location);\r\n    });\r\n  }\r\n\r\n  function listen(listener) {\r\n    changeListeners.push(listener);\r\n\r\n    if (location) {\r\n      listener(location);\r\n    } else {\r\n      var _location = getCurrentLocation();\r\n      allKeys = [_location.key];\r\n      updateLocation(_location);\r\n    }\r\n\r\n    return function () {\r\n      changeListeners = changeListeners.filter(function (item) {\r\n        return item !== listener;\r\n      });\r\n    };\r\n  }\r\n\r\n  function confirmTransitionTo(location, callback) {\r\n    _AsyncUtils.loopAsync(transitionHooks.length, function (index, next, done) {\r\n      _runTransitionHook2['default'](transitionHooks[index], location, function (result) {\r\n        if (result != null) {\r\n          done(result);\r\n        } else {\r\n          next();\r\n        }\r\n      });\r\n    }, function (message) {\r\n      if (getUserConfirmation && typeof message === 'string') {\r\n        getUserConfirmation(message, function (ok) {\r\n          callback(ok !== false);\r\n        });\r\n      } else {\r\n        callback(message !== false);\r\n      }\r\n    });\r\n  }\r\n\r\n  var pendingLocation = undefined;\r\n\r\n  function transitionTo(nextLocation) {\r\n    if (location && locationsAreEqual(location, nextLocation)) return; // Nothing to do.\r\n\r\n    pendingLocation = nextLocation;\r\n\r\n    confirmTransitionTo(nextLocation, function (ok) {\r\n      if (pendingLocation !== nextLocation) return; // Transition was interrupted.\r\n\r\n      if (ok) {\r\n        // treat PUSH to current path like REPLACE to be consistent with browsers\r\n        if (nextLocation.action === _Actions.PUSH) {\r\n          var prevPath = createPath(location);\r\n          var nextPath = createPath(nextLocation);\r\n\r\n          if (nextPath === prevPath) nextLocation.action = _Actions.REPLACE;\r\n        }\r\n\r\n        if (finishTransition(nextLocation) !== false) updateLocation(nextLocation);\r\n      } else if (location && nextLocation.action === _Actions.POP) {\r\n        var prevIndex = allKeys.indexOf(location.key);\r\n        var nextIndex = allKeys.indexOf(nextLocation.key);\r\n\r\n        if (prevIndex !== -1 && nextIndex !== -1) go(prevIndex - nextIndex); // Restore the URL.\r\n      }\r\n    });\r\n  }\r\n\r\n  function push(location) {\r\n    transitionTo(createLocation(location, _Actions.PUSH, createKey()));\r\n  }\r\n\r\n  function replace(location) {\r\n    transitionTo(createLocation(location, _Actions.REPLACE, createKey()));\r\n  }\r\n\r\n  function goBack() {\r\n    go(-1);\r\n  }\r\n\r\n  function goForward() {\r\n    go(1);\r\n  }\r\n\r\n  function createKey() {\r\n    return createRandomKey(keyLength);\r\n  }\r\n\r\n  function createPath(location) {\r\n    if (location == null || typeof location === 'string') return location;\r\n\r\n    var pathname = location.pathname;\r\n    var search = location.search;\r\n    var hash = location.hash;\r\n\r\n    var result = pathname;\r\n\r\n    if (search) result += search;\r\n\r\n    if (hash) result += hash;\r\n\r\n    return result;\r\n  }\r\n\r\n  function createHref(location) {\r\n    return createPath(location);\r\n  }\r\n\r\n  function createLocation(location, action) {\r\n    var key = arguments.length <= 2 || arguments[2] === undefined ? createKey() : arguments[2];\r\n\r\n    if (typeof action === 'object') {\r\n      //warning(\r\n      //  false,\r\n      //  'The state (2nd) argument to history.createLocation is deprecated; use a ' +\r\n      //  'location descriptor instead'\r\n      //)\r\n\r\n      if (typeof location === 'string') location = _parsePath2['default'](location);\r\n\r\n      location = _extends({}, location, { state: action });\r\n\r\n      action = key;\r\n      key = arguments[3] || createKey();\r\n    }\r\n\r\n    return _createLocation3['default'](location, action, key);\r\n  }\r\n\r\n  // deprecated\r\n  function setState(state) {\r\n    if (location) {\r\n      updateLocationState(location, state);\r\n      updateLocation(location);\r\n    } else {\r\n      updateLocationState(getCurrentLocation(), state);\r\n    }\r\n  }\r\n\r\n  function updateLocationState(location, state) {\r\n    location.state = _extends({}, location.state, state);\r\n    saveState(location.key, location.state);\r\n  }\r\n\r\n  // deprecated\r\n  function registerTransitionHook(hook) {\r\n    if (transitionHooks.indexOf(hook) === -1) transitionHooks.push(hook);\r\n  }\r\n\r\n  // deprecated\r\n  function unregisterTransitionHook(hook) {\r\n    transitionHooks = transitionHooks.filter(function (item) {\r\n      return item !== hook;\r\n    });\r\n  }\r\n\r\n  // deprecated\r\n  function pushState(state, path) {\r\n    if (typeof path === 'string') path = _parsePath2['default'](path);\r\n\r\n    push(_extends({ state: state }, path));\r\n  }\r\n\r\n  // deprecated\r\n  function replaceState(state, path) {\r\n    if (typeof path === 'string') path = _parsePath2['default'](path);\r\n\r\n    replace(_extends({ state: state }, path));\r\n  }\r\n\r\n  return {\r\n    listenBefore: listenBefore,\r\n    listen: listen,\r\n    transitionTo: transitionTo,\r\n    push: push,\r\n    replace: replace,\r\n    go: go,\r\n    goBack: goBack,\r\n    goForward: goForward,\r\n    createKey: createKey,\r\n    createPath: createPath,\r\n    createHref: createHref,\r\n    createLocation: createLocation,\r\n\r\n    setState: _deprecate2['default'](setState, 'setState is deprecated; use location.key to save state instead'),\r\n    registerTransitionHook: _deprecate2['default'](registerTransitionHook, 'registerTransitionHook is deprecated; use listenBefore instead'),\r\n    unregisterTransitionHook: _deprecate2['default'](unregisterTransitionHook, 'unregisterTransitionHook is deprecated; use the callback returned from listenBefore instead'),\r\n    pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),\r\n    replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')\r\n  };\r\n}\r\n\r\nexports['default'] = createHistory;\r\nmodule.exports = exports['default'];","//import warning from 'warning'\r\n'use strict';\r\n\r\nexports.__esModule = true;\r\n\r\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\r\n\r\nvar _Actions = require('./Actions');\r\n\r\nvar _parsePath = require('./parsePath');\r\n\r\nvar _parsePath2 = _interopRequireDefault(_parsePath);\r\n\r\nfunction createLocation() {\r\n  var location = arguments.length <= 0 || arguments[0] === undefined ? '/' : arguments[0];\r\n  var action = arguments.length <= 1 || arguments[1] === undefined ? _Actions.POP : arguments[1];\r\n  var key = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];\r\n\r\n  var _fourthArg = arguments.length <= 3 || arguments[3] === undefined ? null : arguments[3];\r\n\r\n  if (typeof location === 'string') location = _parsePath2['default'](location);\r\n\r\n  if (typeof action === 'object') {\r\n    //warning(\r\n    //  false,\r\n    //  'The state (2nd) argument to createLocation is deprecated; use a ' +\r\n    //  'location descriptor instead'\r\n    //)\r\n\r\n    location = _extends({}, location, { state: action });\r\n\r\n    action = key || _Actions.POP;\r\n    key = _fourthArg;\r\n  }\r\n\r\n  var pathname = location.pathname || '/';\r\n  var search = location.search || '';\r\n  var hash = location.hash || '';\r\n  var state = location.state || null;\r\n\r\n  return {\r\n    pathname: pathname,\r\n    search: search,\r\n    hash: hash,\r\n    state: state,\r\n    action: action,\r\n    key: key\r\n  };\r\n}\r\n\r\nexports['default'] = createLocation;\r\nmodule.exports = exports['default'];","//import warning from 'warning'\r\n\r\n\"use strict\";\r\n\r\nexports.__esModule = true;\r\nfunction deprecate(fn) {\r\n  return fn;\r\n  //return function () {\r\n  //  warning(false, '[history] ' + message)\r\n  //  return fn.apply(this, arguments)\r\n  //}\r\n}\r\n\r\nexports[\"default\"] = deprecate;\r\nmodule.exports = exports[\"default\"];","\"use strict\";\r\n\r\nexports.__esModule = true;\r\nfunction extractPath(string) {\r\n  var match = string.match(/^https?:\\/\\/[^\\/]*/);\r\n\r\n  if (match == null) return string;\r\n\r\n  return string.substring(match[0].length);\r\n}\r\n\r\nexports[\"default\"] = extractPath;\r\nmodule.exports = exports[\"default\"];","'use strict';\r\n\r\nexports.__esModule = true;\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\r\n\r\nvar _warning = require('warning');\r\n\r\nvar _warning2 = _interopRequireDefault(_warning);\r\n\r\nvar _extractPath = require('./extractPath');\r\n\r\nvar _extractPath2 = _interopRequireDefault(_extractPath);\r\n\r\nfunction parsePath(path) {\r\n  var pathname = _extractPath2['default'](path);\r\n  var search = '';\r\n  var hash = '';\r\n\r\n  process.env.NODE_ENV !== 'production' ? _warning2['default'](path === pathname, 'A path must be pathname + search + hash only, not a fully qualified URL like \"%s\"', path) : undefined;\r\n\r\n  var hashIndex = pathname.indexOf('#');\r\n  if (hashIndex !== -1) {\r\n    hash = pathname.substring(hashIndex);\r\n    pathname = pathname.substring(0, hashIndex);\r\n  }\r\n\r\n  var searchIndex = pathname.indexOf('?');\r\n  if (searchIndex !== -1) {\r\n    search = pathname.substring(searchIndex);\r\n    pathname = pathname.substring(0, searchIndex);\r\n  }\r\n\r\n  if (pathname === '') pathname = '/';\r\n\r\n  return {\r\n    pathname: pathname,\r\n    search: search,\r\n    hash: hash\r\n  };\r\n}\r\n\r\nexports['default'] = parsePath;\r\nmodule.exports = exports['default'];","'use strict';\r\n\r\nexports.__esModule = true;\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\r\n\r\nvar _warning = require('warning');\r\n\r\nvar _warning2 = _interopRequireDefault(_warning);\r\n\r\nfunction runTransitionHook(hook, location, callback) {\r\n  var result = hook(location, callback);\r\n\r\n  if (hook.length < 2) {\r\n    // Assume the hook runs synchronously and automatically\r\n    // call the callback with the return value.\r\n    callback(result);\r\n  } else {\r\n    process.env.NODE_ENV !== 'production' ? _warning2['default'](result === undefined, 'You should not \"return\" in a transition hook with a callback argument; call the callback instead') : undefined;\r\n  }\r\n}\r\n\r\nexports['default'] = runTransitionHook;\r\nmodule.exports = exports['default'];","/**\r\n * Copyright 2013-2015, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Use invariant() to assert state which your program assumes to be true.\r\n *\r\n * Provide sprintf-style format (only %s is supported) and arguments\r\n * to provide information about what broke and what you were\r\n * expecting.\r\n *\r\n * The invariant message will be stripped in production, but the invariant\r\n * will remain to ensure logic does not differ in production.\r\n */\r\n\r\nvar invariant = function(condition, format, a, b, c, d, e, f) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (format === undefined) {\r\n      throw new Error('invariant requires an error message argument');\r\n    }\r\n  }\r\n\r\n  if (!condition) {\r\n    var error;\r\n    if (format === undefined) {\r\n      error = new Error(\r\n        'Minified exception occurred; use the non-minified dev environment ' +\r\n        'for the full error message and additional helpful warnings.'\r\n      );\r\n    } else {\r\n      var args = [a, b, c, d, e, f];\r\n      var argIndex = 0;\r\n      error = new Error(\r\n        format.replace(/%s/g, function() { return args[argIndex++]; })\r\n      );\r\n      error.name = 'Invariant Violation';\r\n    }\r\n\r\n    error.framesToPop = 1; // we don't care about invariant's own frame\r\n    throw error;\r\n  }\r\n};\r\n\r\nmodule.exports = invariant;\r\n","// shim for using process in browser\r\nvar process = module.exports = {};\r\n\r\n// cached from whatever global is present so that test runners that stub it\r\n// don't break things.  But we need to wrap it in a try catch in case it is\r\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\r\n// function because try/catches deoptimize in certain engines.\r\n\r\nvar cachedSetTimeout;\r\nvar cachedClearTimeout;\r\n\r\nfunction defaultSetTimout() {\r\n    throw new Error('setTimeout has not been defined');\r\n}\r\nfunction defaultClearTimeout () {\r\n    throw new Error('clearTimeout has not been defined');\r\n}\r\n(function () {\r\n    try {\r\n        if (typeof setTimeout === 'function') {\r\n            cachedSetTimeout = setTimeout;\r\n        } else {\r\n            cachedSetTimeout = defaultSetTimout;\r\n        }\r\n    } catch (e) {\r\n        cachedSetTimeout = defaultSetTimout;\r\n    }\r\n    try {\r\n        if (typeof clearTimeout === 'function') {\r\n            cachedClearTimeout = clearTimeout;\r\n        } else {\r\n            cachedClearTimeout = defaultClearTimeout;\r\n        }\r\n    } catch (e) {\r\n        cachedClearTimeout = defaultClearTimeout;\r\n    }\r\n} ())\r\nfunction runTimeout(fun) {\r\n    if (cachedSetTimeout === setTimeout) {\r\n        //normal enviroments in sane situations\r\n        return setTimeout(fun, 0);\r\n    }\r\n    // if setTimeout wasn't available but was latter defined\r\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\r\n        cachedSetTimeout = setTimeout;\r\n        return setTimeout(fun, 0);\r\n    }\r\n    try {\r\n        // when when somebody has screwed with setTimeout but no I.E. maddness\r\n        return cachedSetTimeout(fun, 0);\r\n    } catch(e){\r\n        try {\r\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\r\n            return cachedSetTimeout.call(null, fun, 0);\r\n        } catch(e){\r\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\r\n            return cachedSetTimeout.call(this, fun, 0);\r\n        }\r\n    }\r\n\r\n\r\n}\r\nfunction runClearTimeout(marker) {\r\n    if (cachedClearTimeout === clearTimeout) {\r\n        //normal enviroments in sane situations\r\n        return clearTimeout(marker);\r\n    }\r\n    // if clearTimeout wasn't available but was latter defined\r\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\r\n        cachedClearTimeout = clearTimeout;\r\n        return clearTimeout(marker);\r\n    }\r\n    try {\r\n        // when when somebody has screwed with setTimeout but no I.E. maddness\r\n        return cachedClearTimeout(marker);\r\n    } catch (e){\r\n        try {\r\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\r\n            return cachedClearTimeout.call(null, marker);\r\n        } catch (e){\r\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\r\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\r\n            return cachedClearTimeout.call(this, marker);\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\nvar queue = [];\r\nvar draining = false;\r\nvar currentQueue;\r\nvar queueIndex = -1;\r\n\r\nfunction cleanUpNextTick() {\r\n    if (!draining || !currentQueue) {\r\n        return;\r\n    }\r\n    draining = false;\r\n    if (currentQueue.length) {\r\n        queue = currentQueue.concat(queue);\r\n    } else {\r\n        queueIndex = -1;\r\n    }\r\n    if (queue.length) {\r\n        drainQueue();\r\n    }\r\n}\r\n\r\nfunction drainQueue() {\r\n    if (draining) {\r\n        return;\r\n    }\r\n    var timeout = runTimeout(cleanUpNextTick);\r\n    draining = true;\r\n\r\n    var len = queue.length;\r\n    while(len) {\r\n        currentQueue = queue;\r\n        queue = [];\r\n        while (++queueIndex < len) {\r\n            if (currentQueue) {\r\n                currentQueue[queueIndex].run();\r\n            }\r\n        }\r\n        queueIndex = -1;\r\n        len = queue.length;\r\n    }\r\n    currentQueue = null;\r\n    draining = false;\r\n    runClearTimeout(timeout);\r\n}\r\n\r\nprocess.nextTick = function (fun) {\r\n    var args = new Array(arguments.length - 1);\r\n    if (arguments.length > 1) {\r\n        for (var i = 1; i < arguments.length; i++) {\r\n            args[i - 1] = arguments[i];\r\n        }\r\n    }\r\n    queue.push(new Item(fun, args));\r\n    if (queue.length === 1 && !draining) {\r\n        runTimeout(drainQueue);\r\n    }\r\n};\r\n\r\n// v8 likes predictible objects\r\nfunction Item(fun, array) {\r\n    this.fun = fun;\r\n    this.array = array;\r\n}\r\nItem.prototype.run = function () {\r\n    this.fun.apply(null, this.array);\r\n};\r\nprocess.title = 'browser';\r\nprocess.browser = true;\r\nprocess.env = {};\r\nprocess.argv = [];\r\nprocess.version = ''; // empty string to avoid regexp issues\r\nprocess.versions = {};\r\n\r\nfunction noop() {}\r\n\r\nprocess.on = noop;\r\nprocess.addListener = noop;\r\nprocess.once = noop;\r\nprocess.off = noop;\r\nprocess.removeListener = noop;\r\nprocess.removeAllListeners = noop;\r\nprocess.emit = noop;\r\nprocess.prependListener = noop;\r\nprocess.prependOnceListener = noop;\r\n\r\nprocess.listeners = function (name) { return [] }\r\n\r\nprocess.binding = function (name) {\r\n    throw new Error('process.binding is not supported');\r\n};\r\n\r\nprocess.cwd = function () { return '/' };\r\nprocess.chdir = function (dir) {\r\n    throw new Error('process.chdir is not supported');\r\n};\r\nprocess.umask = function() { return 0; };\r\n","/**\r\n * Copyright 2014-2015, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Similar to invariant but only logs a warning if the condition is not met.\r\n * This can be used to log issues in development environments in critical\r\n * paths. Removing the logging code for production environments will keep the\r\n * same logic and follow the same code paths.\r\n */\r\n\r\nvar warning = function() {};\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n  warning = function(condition, format, args) {\r\n    var len = arguments.length;\r\n    args = new Array(len > 2 ? len - 2 : 0);\r\n    for (var key = 2; key < len; key++) {\r\n      args[key - 2] = arguments[key];\r\n    }\r\n    if (format === undefined) {\r\n      throw new Error(\r\n        '`warning(condition, format, ...args)` requires a warning ' +\r\n        'message argument'\r\n      );\r\n    }\r\n\r\n    if (format.length < 10 || (/^[s\\W]*$/).test(format)) {\r\n      throw new Error(\r\n        'The warning format should be able to uniquely identify this ' +\r\n        'warning. Please, use a more descriptive format than: ' + format\r\n      );\r\n    }\r\n\r\n    if (!condition) {\r\n      var argIndex = 0;\r\n      var message = 'Warning: ' +\r\n        format.replace(/%s/g, function() {\r\n          return args[argIndex++];\r\n        });\r\n      if (typeof console !== 'undefined') {\r\n        console.error(message);\r\n      }\r\n      try {\r\n        // This error was thrown as a convenience so that you can use this stack\r\n        // to find the callsite that caused this warning to fire.\r\n        throw new Error(message);\r\n      } catch(x) {}\r\n    }\r\n  };\r\n}\r\n\r\nmodule.exports = warning;\r\n","import React from 'react'\r\n\r\nimport Navbar from './Navbar'\r\nimport Footer from './Footer'\r\n\r\nexport default class App extends React.Component {\r\n  render () {\r\n    return (\r\n      <div>\r\n        <Navbar history={this.props.history} />\r\n        {this.props.children}\r\n        <Footer />\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react'\r\nimport { Link } from 'react-router'\r\n\r\nexport default class Footer extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      mostRecentMovies: []\r\n    }\r\n\r\n    this.getFiveRecentMovies = this.getFiveRecentMovies.bind(this)\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.getFiveRecentMovies()\r\n    this.interval = setInterval(() => this.getFiveRecentMovies(), 30000)\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    clearInterval(this.interval)\r\n  }\r\n\r\n  getFiveRecentMovies () {\r\n    let request = {\r\n      method: 'get',\r\n      url: '/api/movies/five-recent'\r\n    }\r\n    $.ajax(request)\r\n      .done(data => {\r\n        this.setState({\r\n          mostRecentMovies: data\r\n        })\r\n      })\r\n      .fail(err => toastr.error(err.responseJSON.message))\r\n  }\r\n\r\n  render () {\r\n    let mostRecentMovies = this.state.mostRecentMovies.map(movie => {\r\n      return (\r\n        <li key={movie._id}>\r\n          <Link to={`/...`}>{movie.name}</Link>\r\n        </li>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <footer>\r\n        <div className='container'>\r\n          <div className='row'>\r\n            <div className='col-sm-5'>\r\n              <h3 className='lead'>\r\n                <strong>Information</strong> and\r\n                <strong> Copyright</strong>\r\n              </h3>\r\n              <p>\r\n                Powered by\r\n                <strong> Express</strong>\r\n                <strong> MongoDB</strong> and\r\n                <strong> React</strong>\r\n              </p>\r\n              <p>@ 2017 Softuni.</p>\r\n            </div>\r\n            <div className='col-sm-4 hidden-xs'>\r\n              <h3 className='lead'>\r\n                <strong>Newest</strong> 5 Movies\r\n              </h3>\r\n              <ul className='list-inline'>\r\n                {mostRecentMovies}\r\n              </ul>\r\n            </div>\r\n            <div className='col-sm-3'>\r\n              <h3 className='lead'>Author</h3>\r\n              <a href='https://github.com/achobanov'>\r\n                <strong> Alex Chobanov</strong>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nimport MovieCard from './sub-components/MovieCard'\r\n\r\nexport default class Home extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      topTenMovies: [],\r\n      error: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    let request = {\r\n      url: '/api/movies/top-ten',\r\n      method: 'get'\r\n    }\r\n    $.ajax(request)\r\n      .done(data => this.setState({ topTenMovies: data }))\r\n      .fail(error => this.setState({ error: error.responseJSON.message }))\r\n  }\r\n\r\n  render () {\r\n    let movies = this.state.topTenMovies.map((movie, index) => {\r\n      return (\r\n        <MovieCard key={movie._id}\r\n          movie={movie}\r\n          index={index} />\r\n\r\n      )\r\n    })\r\n    return (\r\n      <div className='container'>\r\n        <h3 className='text-center'>Welcome to\r\n          <strong> Movie Database</strong>\r\n        </h3>\r\n        <div className='list-group'>\r\n          {movies}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nimport Helpers from '../utilities/Helpers'\r\n\r\nexport default class AddMovie extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      name: '',\r\n      description: '',\r\n      genres: [],\r\n      genresValidationState: '',\r\n      nameValidationState: '',\r\n      posterValidationState: '',\r\n      helpBlock: ''\r\n    }\r\n  }\r\n\r\n  handleSubmit (e) {\r\n    e.preventDefault()\r\n\r\n    let name = this.state.name.trim()\r\n    let genres = this.state.genres\r\n    if (!name) {\r\n      this.setState({\r\n        nameValidationState: 'has-error',\r\n        helpBlock: 'Please enter Movie name!'\r\n      })\r\n    }\r\n    if (genres.length === 0) {\r\n      this.setState({\r\n        genresValidationState: 'has-error',\r\n        helpBlock: 'Please enter Movie name!'\r\n      })\r\n    }\r\n\r\n    if (name) {\r\n      let data = {\r\n        name: this.state.name,\r\n        description: this.state.description,\r\n        genres: this.state.genres\r\n      }\r\n\r\n      let request = {\r\n        url: '/api/movies/add',\r\n        method: 'POST',\r\n        data: JSON.stringify(data),\r\n        contentType: 'application/json'\r\n      }\r\n      $.ajax(request)\r\n        .done(() => {\r\n          this.props.history.pushState(null, '/')\r\n\r\n        })\r\n        .fail(() => console.log('movie post fail.'))\r\n    }\r\n  }\r\n\r\n  handleNameChange (e) {\r\n    let name = e.target.value\r\n    this.setState({\r\n      name: name\r\n    })\r\n  }\r\n\r\n  handleDescriptionChange (e) {\r\n    let description = e.target.value\r\n    this.setState({\r\n      description: description\r\n    })\r\n  }\r\n\r\n  handleGenresChange (e) {\r\n    let genreValue = e.target.value\r\n    console.log('MovieAdd state', this.state)\r\n    if (this.state.genres.indexOf(genreValue) === -1) {\r\n      this.setState(prevState => ({\r\n        genres: Helpers.appendToArray(genreValue, prevState.genres)\r\n      }))\r\n    } else {\r\n      this.setState(prevState => ({\r\n        genres: Helpers.removeFromArray(genreValue, prevState.genres)\r\n      }))\r\n    }\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className='container'>\r\n        <div className='row flipInX animated'>\r\n          <div className='col-sm-8'>\r\n            <div className='panel panel-default'>\r\n              <div className='panel-heading'>Add Movie</div>\r\n              <div className='panel-body'>\r\n                <form onSubmit={this.handleSubmit.bind(this)}>\r\n                  <div className={'form-group ' + this.state.nameValidationState}>\r\n                    <label className='control-label'>Name</label>\r\n                    <input type='text' className='form-control' ref='nameTextField'\r\n                      value={this.state.name}\r\n                      onChange={this.handleNameChange.bind(this)} autoFocus />\r\n                    <span className='help-block'>{this.state.helpBlock}</span>\r\n                  </div>\r\n                  <div className='form-group'>\r\n                    <label className='control-label'>Description</label>\r\n                    <textarea className='form-control'\r\n                      rows='5'\r\n                      value={this.state.description}\r\n                      onChange={this.handleDescriptionChange.bind(this)} />\r\n                  </div>\r\n                  <div className={'form-group ' + this.state.genresValidationState}>\r\n                    <div className='checkbox checkbox-inline'>\r\n                      <input type='checkbox' name='genres' id='action' value='Action'\r\n                        checked={this.state.genres.indexOf('Action') !== -1}\r\n                        onClick={this.handleGenresChange.bind(this)} />\r\n                      <label htmlFor='action'>Action</label>\r\n                    </div>\r\n                    <div className='checkbox checkbox-inline'>\r\n                      <input type='checkbox' name='genres' id='horror' value='Horror'\r\n                        checked={this.state.genres.indexOf('Horror') !== -1}\r\n                        onChange={this.handleGenresChange.bind(this)} />\r\n                      <label htmlFor='horror'>Horror</label>\r\n                    </div>\r\n                    <div className='checkbox checkbox-inline'>\r\n                      <input type='checkbox' name='genres' id='sci-fi' value='Sci-fi'\r\n                        checked={this.state.genres.indexOf('Sci-fi') !== -1}\r\n                        onChange={this.handleGenresChange.bind(this)} />\r\n                      <label htmlFor='sci-fi'>Sci-fi</label>\r\n                    </div>\r\n                    <div className='checkbox checkbox-inline'>\r\n                      <input type='checkbox' name='genres' id='fantasy' value='Fantasy'\r\n                        checked={this.state.genres.indexOf('Fantasy') !== -1}\r\n                        onChange={this.handleGenresChange.bind(this)} />\r\n                      <label htmlFor='fantasy'>Fantasy</label>\r\n                    </div>\r\n                    <div className='checkbox checkbox-inline'>\r\n                      <input type='checkbox' name='genres' id='romance' value='Romance'\r\n                        checked={this.state.genres.indexOf('Romance') !== -1}\r\n                        onChange={this.handleGenresChange.bind(this)} />\r\n                      <label htmlFor='romance'>Romance</label>\r\n                    </div>\r\n                    <div className='checkbox checkbox-inline'>\r\n                      <input type='checkbox' name='genres' id='thriller' value='Thriller'\r\n                        checked={this.state.genres.indexOf('Thriller') !== -1}\r\n                        onChange={this.handleGenresChange.bind(this)} />\r\n                      <label htmlFor='thriller'>Thriller</label>\r\n                    </div>\r\n                    <div className='checkbox checkbox-inline'>\r\n                      <input type='checkbox' name='genres' id='adventure' value='Adventure'\r\n                        checked={this.state.genres.indexOf('Adventure') !== -1}\r\n                        onChange={this.handleGenresChange.bind(this)} />\r\n                      <label htmlFor='adventure'>Adventure</label>\r\n                    </div>\r\n                  </div>\r\n                  <button type='submit' className='btn btn-primary'>Submit</button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router'\r\n\r\nexport default class Navbar extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      ajaxAnimationClass: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    $(document).ajaxStart(() => {\r\n      this.setState({\r\n        ajaxAnimationClass: 'fadeIn'\r\n      })\r\n    })\r\n\r\n    $(document).ajaxComplete(() => {\r\n      this.setState({\r\n        ajaxAnimationClass: 'fadeOut'\r\n      })\r\n    })\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <nav className='navbar navbar-default navbar-static-top'>\r\n        <div className='navbar-header'>\r\n          <button type='button'\r\n            className='navbar-toggle collapsed'\r\n            data-toggle='collapse'\r\n            data-target='#navbar'>\r\n            <span className='sr-only'>Toggle navigation</span>\r\n            <span className='icon-bar' />\r\n            <span className='icon-bar' />\r\n            <span className='icon-bar' />\r\n          </button>\r\n          <Link to='/' className='navbar-brand'>\r\n            <span\r\n              style={{'opacity': 1}}\r\n              ref='triangles'\r\n              className={'triangles animated' + this.state.ajaxAnimationClass}>\r\n              <div className='tri invert' />\r\n              <div className='tri invert' />\r\n              <div className='tri' />\r\n              <div className='tri invert' />\r\n              <div className='tri invert' />\r\n              <div className='tri' />\r\n              <div className='tri invert' />\r\n              <div className='tri' />\r\n              <div className='tri invert' />\r\n            </span>\r\n            MDB\r\n          </Link>\r\n        </div>\r\n        <div id='navbar' className='navbar-collapse collapse'>\r\n          <ul className='nav navbar-nav'>\r\n            <li>\r\n              <Link to='/'>Home</Link>\r\n            </li>\r\n            <li>\r\n              <Link to='/movie/add'>Add Movie</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router'\r\n\r\nexport default class MovieCard extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      movieScore: this.props.movie.score,\r\n      movieVotes: this.props.movie.votes\r\n    }\r\n  }\r\n\r\n  render () {\r\n    return  (\r\n      <div className='animated fadeIn'>\r\n        <div className='media movie'>\r\n          <span className='position pull-left'>{this.props.index + 1}</span>\r\n          <div className='media-body'>\r\n            <h4 className='media-heading'>\r\n              <Link to={`/movie/${this.props.movie._id}/${this.props.movie.name}`}>\r\n                {this.props.movie.name}\r\n              </Link>\r\n            </h4>\r\n            <small>Genres: {this.props.movie.genres}</small>\r\n            <br />\r\n            <p>{this.props.movie.genres}</p>\r\n            <span className='votes'>Votes:\r\n              {/* <strong>{this.state.movieVotes}</strong> */}\r\n            </span>\r\n            {/* {nodes.rating} */}\r\n          </div>\r\n          {/* {nodes.panelToggles} */}\r\n        </div>\r\n        {/* {nodes.votePanel} */}\r\n        {/* {nodes.commentsPanel} */}\r\n        <div id='clear' />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Router from 'react-router';\r\nimport ReactDOM from 'react-dom';\r\nimport createBrowserHistory from 'history/lib/createBrowserHistory';\r\n\r\nimport routes from './routes';\r\n\r\nlet history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n    <Router history={history}>{ routes }</Router>,\r\n    document.getElementById('app')\r\n);","import React from 'react'\r\nimport { Route } from 'react-router'\r\n\r\nimport App from './components/App'\r\nimport Home from './components/Home'\r\nimport MovieAdd from './components/MovieAdd'\r\n\r\nexport default (\r\n  <Route component={App}>\r\n    <Route path='/' component={Home} />\r\n    <Route path='/movie/Add' component={MovieAdd} />\r\n  </Route>\r\n)\r\n","export default class Helpers {\r\n  static appendToArray (value, array) {\r\n    array.push(value)\r\n\r\n    return array\r\n  }\r\n\r\n  static prependToArray (value, array) {\r\n    array.unshift(value)\r\n\r\n    return array\r\n  }\r\n\r\n  static removeFromArray (value, array) {\r\n    let index = array.indexOf(value)\r\n    if (index !== 1) {\r\n      array.splice(index, 1)\r\n    }\r\n\r\n    return array\r\n  }\r\n}"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}